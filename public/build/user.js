(self["webpackChunkcelsius3"] = self["webpackChunkcelsius3"] || []).push([["user"],{

/***/ "./assets/ng/User/app.js":
/*!*******************************!*\
  !*** ./assets/ng/User/app.js ***!
  \*******************************/
/***/ (() => {

var userApp = angular.module('userApp', ['ngRoute', 'ngResource', 'ngAnimate', 'userControllers', 'userFilters', 'angular-loading-bar', 'pascalprecht.translate', 'ui.bootstrap', 'boxuk.translation']);
userApp.config(['$routeProvider', '$translateProvider', function ($routeProvider, $translateProvider) {
  $routeProvider.when('/', {
    templateUrl: 'index.html?' + assets_version_user
  }).otherwise({
    redirectTo: '/'
  });
  $translateProvider.useStaticFilesLoader({
    prefix: '/bundles/celsius3core/ng/locales/locale-',
    suffix: '.json'
  });
  $translateProvider.preferredLanguage(_locale);
  $translateProvider.useSanitizeValueStrategy('escaped');
}]);

/***/ }),

/***/ "./assets/ng/User/controllers.js":
/*!***************************************!*\
  !*** ./assets/ng/User/controllers.js ***!
  \***************************************/
/***/ (() => {

var userControllers = angular.module('userControllers', []);
userControllers.controller('UserCtrl', ['$scope', '$http', 'Order', 'Message', 'User', function ($scope, $http, Order, Message, User) {
  'use strict';

  $scope.assets_version = assets_version_user;
  $scope.sortData = {
    sort: 'o.createdAt',
    direction: 'desc'
  };
  $http.get(Routing.generate('user_rest_order_count_get')).then(function (response) {
    $scope.orderCount = response.data;
    $scope.loadOrders();
  }, function (response) {
    generateCelsiusAlert(response);
  });
  $scope.pagination = {
    currentPage: 1,
    resultsPerPage: resultsPerPage
  };
  $scope.loadOrders = function () {
    Order.query({
      state: 'created,searched,requested,approval_pending,received',
      withRequest: true,
      page: $scope.pagination.currentPage,
      sort: $scope.sortData.sort,
      direction: $scope.sortData.direction
    }, function (response) {
      $scope.orders = response.orders;
      $scope.total = $scope.orderCount.created + $scope.orderCount.searched + $scope.orderCount.requested + $scope.orderCount.approval_pending + $scope.orderCount.received;
      $scope.numPages = Math.ceil($scope.total / 10);
      $scope.orders.forEach(function (order) {
        order.request = response.requests[order.id];
      });
    });
  };
  $scope.pageChanged = function () {
    $scope.loadOrders();
  };
  $scope.sort = function (field) {
    if ($scope.sortData.sort === field) {
      $scope.sortData.direction = $scope.sortData.direction === 'asc' ? 'desc' : 'asc';
    } else {
      $scope.sortData.sort = field;
      $scope.sortData.direction = 'asc';
    }
    $scope.loadOrders();
  };
  Message.query({
    sort: 'm.lastMessageDate',
    direction: 'desc',
    count: 3
  }, function (response) {
    $scope.threads = response;
  });
  $scope.user = User.get({
    id: user_id
  });
  $scope.getFileDownloadRoute = function (request, file) {
    return Routing.generate('user_file_download', {
      request: request.id,
      file: file.id
    });
  };
  $scope.hasDownloadableFiles = function (e) {
    return !e.downloaded || e.has_download_time;
  };
  $scope.user_role = user_role;
}]);

/***/ }),

/***/ "./assets/ng/User/filters.js":
/*!***********************************!*\
  !*** ./assets/ng/User/filters.js ***!
  \***********************************/
/***/ (() => {

var userFilters = angular.module('userFilters', []);
userFilters.filter('get_url', function () {
  return function (input) {
    return Routing.generate(input.path, input.params);
  };
});
userFilters.filter('request_type', function () {
  return function (type) {
    return type === 'search' ? 'busqueda' : 'provision';
  };
});
userFilters.filter('request_type_abbr', function () {
  return function (type) {
    return type === 'search' ? 's' : 'p';
  };
});

/***/ }),

/***/ "./assets/ng/User/resources.js":
/*!*************************************!*\
  !*** ./assets/ng/User/resources.js ***!
  \*************************************/
/***/ (() => {

var userApp = angular.module('userApp');
userApp.factory('Order', ['$resource', function ($resource) {
  return $resource(Routing.generate('user_rest_order') + ':id', {
    id: '@id'
  }, {
    query: {
      isArray: false
    }
  });
}]);
userApp.factory('User', ['$resource', function ($resource) {
  return $resource(Routing.generate('user_rest_user') + '/:id', {
    id: '@id'
  });
}]);
userApp.factory('Message', ['$resource', function ($resource) {
  return $resource(Routing.generate('rest_message') + ':id', {
    id: '@id'
  });
}]);

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./assets/ng/User/app.js"), __webpack_exec__("./assets/ng/User/resources.js"), __webpack_exec__("./assets/ng/User/controllers.js"), __webpack_exec__("./assets/ng/User/filters.js"));
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
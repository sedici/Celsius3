imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #    trusted_proxies: ['127.0.0.1', '10.0.0.1'] # a list of proxy IPs you trust
    default_locale: es
    translator:      { fallback: en }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: "%kernel.debug%"
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    session:
        handler_id:  snc_redis.session.handler
    assets:
        json_manifest_path: '%kernel.project_dir%/web/build/manifest.json'
        packages:
            administration:
                version: "%assets_version_administration%"
            admin_order:
                version: "%assets_version_admin_order%"
            admin_base_user:
                version: "%assets_version_admin_base_user%"
            admin_institution:
                version: "%assets_version_admin_institution%"
            user:
                version: "%assets_version_user%"
            celsius3:
                version: "%assets_version_celsius3%"

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        notification_public_url: "%notification_public_url%"
        notification_port: "%notification_port%"
        notification_limit: "%notification_limit%"
        instance_helper: "@celsius3_core.instance_helper"
    form_themes:
        - 'Celsius3CoreBundle:Form:fields.html.twig'

doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                metadata_cache_driver: redis
                query_cache_driver: redis
                result_cache_driver:    redis
                mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                filters:
                    softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true
                dql:
                    string_functions:
                        MONTH: DoctrineExtensions\Query\Mysql\Month
                        YEAR: DoctrineExtensions\Query\Mysql\Year
                        IFNULL: DoctrineExtensions\Query\Mysql\IfNull
                        DATEDIFF: DoctrineExtensions\Query\Mysql\DateDiff
                        ANY_VALUE: DoctrineExtensions\Query\Mysql\AnyValue
                        GROUP_CONCAT: DoctrineExtensions\Query\Mysql\GroupConcat
                        TYPE: Celsius3\CoreBundle\Query\DQL\Type
                    numeric_functions:
                        ACOS: DoctrineExtensions\Query\Mysql\Acos
                        COS: DoctrineExtensions\Query\Mysql\Cos
                        SIN: DoctrineExtensions\Query\Mysql\Sin
                        RADIANS: DoctrineExtensions\Query\Mysql\Radians
                        IFELSE: DoctrineExtensions\Query\Mysql\IfElse

# Swiftmailer Configuration
swiftmailer:
    spool:
        type: file
        path: "%kernel.root_dir%/spool"
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    port:      "%mailer_port%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: Celsius3CoreBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

fos_user:
    db_driver: orm # 'orm', 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Celsius3\CoreBundle\Entity\BaseUser
    profile:
        form:
            type: Celsius3\CoreBundle\Form\Type\ProfileFormType
    registration:
        form:
            type: Celsius3\CoreBundle\Form\Type\RegistrationFormType
    change_password:
        form:
            validation_groups:  [ChangePassword]
    service:
        mailer: celsius3_core.fos_mailer.custom
        user_manager: celsius3_core.fos_user_manager
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

services:
    monolog_processor:
        class: Celsius3\CoreBundle\Logger\ClientProcessor
        arguments:
            - '@request_stack'
        tags:
            - { name: monolog.processor }

    monolog_formatter:
        class: Monolog\Formatter\LineFormatter
        calls:
            - [includeStacktraces]

    # Formulario de registro personalizado
    registration.form.type:
        class: Celsius3\CoreBundle\Form\Type\RegistrationFormType
        arguments: ["@doctrine.orm.entity_manager", "@service_container"]
        tags:
            - { name: form.type }

    profile.form.type:
        class: Celsius3\CoreBundle\Form\Type\ProfileFormType
        arguments: ["%fos_user.model.user.class%"]
        tags:
            - { name: form.type }

    jms_serializer.metadata.doctrine_type_driver:
        class:        "%jms_serializer.metadata.doctrine_type_driver.class%"
        public:       false
        arguments:    ["@jms_serializer.metadata.chain_driver", "@doctrine"]

    jms_serializer.metadata.doctrine_object_constructor:
        class:        "%jms_serializer.doctrine_object_constructor.class%"
        public:       false
        arguments:    ["@doctrine", "@jms_serializer.unserialize_object_constructor"]

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    kernel.listener.command_dispatch:
        class: Celsius3\CoreBundle\EventListener\ConsoleLoggingListener
        arguments:
            $logger: "@logger"
        tags:
            - { name: kernel.event_listener, event: console.exception }
            - { name: kernel.event_listener, event: console.terminate }

    oauth_event_listener:
        class:  Celsius3\ApiBundle\EventListener\OAuthEventListener
        arguments:
            $em: "@doctrine.orm.entity_manager"
        tags:
            - { name: kernel.event_listener, event: fos_oauth_server.pre_authorization_process, method: onPreAuthorizationProcess }
            - { name: kernel.event_listener, event: fos_oauth_server.post_authorization_process, method: onPostAuthorizationProcess }

    celsius3_core.mailer.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: [app]
        calls:
            - [ pushHandler, [ "@celsius3_core.mailer.logger_handler" ] ]

    celsius3_core.mailer.logger_handler:
        class:     Monolog\Handler\StreamHandler
        arguments: [ "%kernel.logs_dir%/%kernel.environment%.mailer.log", 400 ]

    # Usado temporalmente para corregir error de migraci√≥n a Symfony3
    fos_user.doctrine_registry:
        alias: doctrine

jms_aop:
    cache_dir: "%kernel.cache_dir%/jms_aop"

jms_i18n_routing:
    default_locale: es
    locales: [es, en, pt]
    strategy: prefix

jms_translation:
    configs:
        app:
            dirs: ["%kernel.root_dir%", "%kernel.root_dir%/../src"]
            output_dir: "%kernel.root_dir%/../src/Celsius3/CoreBundle/Resources/translations"
            ignored_domains: [routes]
            excluded_names: ["*TestCase.php", "*Test.php"]
            excluded_dirs: [cache, data, logs]
            extractors: [jms_i18n_routing]

fos_message:
    db_driver: orm
    thread_class: Celsius3\MessageBundle\Entity\Thread
    message_class: Celsius3\MessageBundle\Entity\Message
    provider: celsius3_message.provider.default
    new_thread_form:
        name: message
        type: Celsius3\MessageBundle\Form\Type\NewThreadMultipleMessageFormType
        handler: fos_message.new_thread_multiple_form.handler
        model: FOS\MessageBundle\FormModel\NewThreadMultipleMessage
    reply_form:
        type: Celsius3\MessageBundle\Form\Type\ReplyMessageFormCustomType

stof_doctrine_extensions:
    default_locale: "%locale%"
    orm:
        default:
            timestampable: true
            sluggable: true
            softdeleteable: true
            blameable: true

celsius3_notification:
    web_socket_server:
        port: "%notification_port%"        #The port the socket server will listen on
        host: "%notification_host%"   #(optional) The host ip to bind to
        zmq_port: "%notification_zmq_port%"
        zmq_host: "%notification_zmq_host%"

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        formats:
            json : true
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    routing_loader:
        default_format: json

jms_serializer:
    metadata:
        directories:
            FOSUserBundle:
                namespace_prefix: FOS\UserBundle
                path: "@Celsius3ApiBundle/Resources/config/serializer/fos"
            FOSMessageBundle:
                namespace_prefix: FOS\MessageBundle
                path: "@Celsius3ApiBundle/Resources/config/serializer/fos"
            Celsius3CoreBundle:
                namespace_prefix: Celsius3\CoreBundle
                path: "@Celsius3ApiBundle/Resources/config/serializer/core"
            Celsius3MessageBundle:
                namespace_prefix: Celsius3\MessageBundle
                path: "@Celsius3ApiBundle/Resources/config/serializer/message"

snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: redis://localhost
        session:
            type: predis
            alias: session
            dsn: redis://localhost
        cache:
            type: predis
            alias: cache
            dsn: redis://localhost
    session:
        client: session
    doctrine:
        metadata_cache:
            client: cache
            entity_manager: default          # the name of your entity_manager connection
        result_cache:
            client: cache
            entity_manager: default
        query_cache:
            client: cache
            entity_manager: default

fos_oauth_server:
    db_driver: orm
    client_class: Celsius3\ApiBundle\Entity\Client
    access_token_class: Celsius3\ApiBundle\Entity\AccessToken
    refresh_token_class: Celsius3\ApiBundle\Entity\RefreshToken
    auth_code_class: Celsius3\ApiBundle\Entity\AuthCode
    service:
        user_provider: fos_userbundle
        options:
            supported_scopes: admin superadmin
            access_token_lifetime: 3600 # Una hora
            refresh_token_lifetime: 43200 # Un d√≠a
            auth_code_lifetime: 60 # Un minuto

knp_menu:
    twig:
        template: Celsius3CoreBundle:Default:knp_menu.html.twig

fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        app:
            settings:
                index:
                    analysis:
                        analyzer:
                            text_analyzer:
                                type: custom
                                tokenizer: standard
                                filter: [lowercase, stop, stemmer]
            types:
                request:
                    properties:
                        type: { type: keyword }
                        instance:
                            type: "nested"
                            properties:
                                id: ~
                        owner:
                            type: "nested"
                            properties:
                                name: { type: text, analyzer: text_analyzer }
                                surname: { type: text, analyzer: text_analyzer }
                                username: { type: keyword }
                        operator:
                            type: "nested"
                            properties:
                                name: { type: text, analyzer: text_analyzer }
                                surname: { type: text, analyzer: text_analyzer }
                                username: { type: keyword }
                        order:
                            type: "nested"
                            properties:
                                code: { type: text }
                                materialData:
                                    type: "nested"
                                    properties:
                                        materialType: { type: keyword }
                                        title: { type: text, analyzer: text_analyzer, boost: 2 }
                                        authors: { type: text, analyzer: text_analyzer }
                        currentState:
                            type: "nested"
                            properties:
                                type: { type: keyword }
                    dynamic_templates:
                        isbn:
                            match: "isbn"
                            mapping:
                                type: text
                                analyzer: text_analyzer
                        editor:
                            match: "editor"
                            mapping:
                                type: text
                                analyzer: text_analyzer
                        chapter:
                            match: "chapter"
                            mapping:
                                type: text
                                analyzer: text_analyzer
                                boost: 2
                        journal:
                            match: "journal"
                            mapping:
                                type: text
                                analyzer: text_analyzer
                                boost: 2
                    persistence:
                        driver: orm
                        model: Celsius3\CoreBundle\Entity\Request
                        provider: ~
                        listener: ~
                        finder: ~

monolog:
    channels:
        - 'celsius_exception'
        - 'celsius_rest_exception'
    handlers:
        celsius_exception:
            level:    error
            type:     stream
            path:     '%kernel.logs_dir%/celsius_exception.log'
            channels: [celsius_exception]
        celsius_rest_exception:
            level:    error
            type:     stream
            path:     '%kernel.logs_dir%/celsius_rest_exception.log'
            channels: [celsius_rest_exception]

httplug:
    classes:
        client: Http\Adapter\Guzzle6\Client
        message_factory: Http\Message\MessageFactory\GuzzleMessageFactory
    clients:
        acme:
            factory: httplug.factory.guzzle6

ivory_google_map:
    geocoder:
        client: httplug.client.default
        message_factory: httplug.message_factory.default
    map:
        api_key: AIzaSyD0zns4Qlvt-wf-kx__kpBpKkt8p1Z2mfg
        debug: "%kernel.debug%"

ewz_recaptcha:
    public_key:  "%recaptcha_public_key%"
    private_key: "%recaptcha_private_key%"
    enabled: true
    #  ajax: true
    # Not needed as "%kernel.default_locale%" is the default value for the locale key
    #locale_key:  "%kernel.default_locale%"
ivory_serializer:
    mapping:
        auto:
            enabled: false
        reflection: false

enqueue:
    default:
        transport: 'null:'
        client:
            traceable_producer: true

enqueue_elastica:
    transport: default